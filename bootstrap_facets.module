<?php

/**
 * @file
 * Provides facets as Bootsrap components.
 */

use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function bootstrap_facets_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'facets_facet_edit_form') {

    // Get the current widget.
    $build_info = $form_state->getBuildInfo();
    $widget = $build_info['callback_object']->getEntity()->getWidget();

    // Add our field if it's a list widget.
    if ($widget && $widget['type'] == 'links') {
      $form['widget_config']['bootstrap_component'] = [
        '#title' => t('Bootstrap component'),
        '#type' => 'select',
        '#options' => [
          'list_group' => t('List group'),
          'single_button_dropdown' => t('Single button dropdown'),
          'split_button_dropdown' => t('Split button dropdown'),
        ],
        '#empty_option' => t('- None -'),
        '#default_value' => isset($widget['config']['bootstrap_component']) ? $widget['config']['bootstrap_component'] : '',
      ];
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bootstrap_facets_theme_suggestions_facets_item_list_alter(&$suggestions, $variables) {
  $facet = '';
  if (!empty($variables['facet'])) {
    $facet = $variables['facet'];
  }
  elseif ($variables['facet'] === NULL && !empty($variables['items'])) {
    $facet = $variables['items'][0]['#title']['#facet'];
  }
  if ($facet) {
    $widget = \Drupal::entityTypeManager()->getStorage('facets_facet')->load($facet->id())->getWidget();
    if (isset($widget['config']['bootstrap_component'])) {
      $suggestions[] = 'bootstrap_facets_' . $widget['config']['bootstrap_component'];
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bootstrap_facets_theme_suggestions_facets_result_item_alter(&$suggestions, $variables) {
  if ($facet = $variables['facet']) {
    $widget = \Drupal::entityTypeManager()->getStorage('facets_facet')->load($facet->id())->getWidget();
    if (isset($widget['config']['bootstrap_component']) && $variables['theme_hook_original'] != 'facets_result_item__summary') {
      $suggestions[] = 'bootstrap_facets_' . $widget['config']['bootstrap_component'] . '_result_item';
    }
  }
}

/**
 * Add bootstrap class to each link to make them a list group item.
 */
function bootstrap_facets_preprocess_bootstrap_facets_list_group(&$variables) {
  $items = $variables['items'];
  if ($items) {
    $active_items = [];
    foreach ($items as $key => $item) {
      $variables['items'][$key]['value']['#attributes']['class'][] = 'list-group-item';
      $variables['items'][$key]['value']['#attributes']['class'][] = 'bf-list-group-item';
      $variables['items'][$key]['value']['#attributes']['tabindex'] = '0';
      $list_item_attributes = new Attribute();
      if ($variables['items'][$key]['value']['#title']['#is_active']) {
        $variables['items'][$key]['value']['#attributes']['class'][] = 'active';
        $active_items[] = $key;
      }
      $variables['items'][$key]['list_item_attributes'] = $list_item_attributes;
    }
    if (!empty($active_items)) {
      $list_item_classes[] = 'bf-list-item--last-active';
      $list_item_attributes['class'] = $list_item_classes;
    }
    $variables['items'][end($active_items)]['list_item_attributes'] = $list_item_attributes;
  }
}

/**
 * Make sure single button dropdown has a title.
 */
function bootstrap_facets_preprocess_bootstrap_facets_single_button_dropdown(&$variables) {
  $facet_id = $variables['facet_id'];
  $facet = \Drupal::entityTypeManager()->getStorage('facets_facet')->load($facet_id);
  $variables['title'] = $facet->label();
}

/**
 * Make sure split button dropdown has a title.
 */
function bootstrap_facets_preprocess_bootstrap_facets_split_button_dropdown(&$variables) {
  if (isset($variables['facet'])) {
    /** @var \Drupal\facets\Entity\Facet $facet **/
    $facet = $variables['facet'];
    $variables['title'] = $facet->label();
  }
}

/**
 * Implements hook_theme().
 */
function bootstrap_facets_theme($existing, $type, $theme, $path) {
  return [
    'bootstrap_facets_list_group' => [
      'base hook' => 'facets_item_list',
    ],
    'bootstrap_facets_list_group_result_item' => [
      'base hook' => 'facets_result_item',
    ],
    'bootstrap_facets_single_button_dropdown' => [
      'base hook' => 'facets_item_list',
    ],
    'bootstrap_facets_single_button_dropdown_result_item' => [
      'base hook' => 'facets_result_item',
    ],
    'bootstrap_facets_split_button_dropdown' => [
      'base hook' => 'facets_item_list',
    ],
    'bootstrap_facets_split_button_dropdown_result_item' => [
      'base hook' => 'facets_result_item',
    ],
  ];
}
